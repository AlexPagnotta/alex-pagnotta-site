{
  "extends": [
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:jsx-a11y/recommended"
  ],
  // Workaround to avoid error with preact-eslint
  "settings": {
    "jest": { "version": 28 }
  },
  "plugins": ["import"],
  "overrides": [
    // Astro Config
    {
      "files": ["*.astro"],
      "parser": "astro-eslint-parser",
      "parserOptions": {
        "parser": "@typescript-eslint/parser",
        "extraFileExtensions": [".astro"]
      },
      "extends": [
        "plugin:astro/recommended",
        "plugin:astro/jsx-a11y-recommended"
      ]
    },
    // TS Config
    {
      "files": ["**/*.ts?(x)"],
      "parser": "@typescript-eslint/parser",
      "parserOptions": {
        "sourceType": "module"
      },
      "extends": ["preact"],
      "rules": {}
    }
  ],
  "rules": {
    "no-var": "error", //require `let` or `const` instead of `var`
    "prefer-const": "error", //require `const` declarations for variables that are never reassigned after declared
    "spaced-comment": "error", //enforce consistent spacing after the `//` or `/*` in a comment
    "no-console": [
      "warn",
      {
        "allow": ["warn", "error"]
      }
    ], //warning if a console.log is present on the code

    "@typescript-eslint/consistent-type-definitions": ["error", "type"], // Consistent with type definition either interface or type
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true
      }
    ], //require variables to be used, but ignore unused vars in destructuring
    "@typescript-eslint/no-var-requires": "off", //allows requires import

    "import/order": [
      "error",
      {
        "newlines-between": "always",
        "groups": ["builtin", "external", "parent", "sibling", "index"],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  }
}
